#!/bin/bash

# -------
# How to use this:
#   1) Open your GCP cloud shell: https://shell.cloud.google.com/?hl=en_US&fromcloudshell=true&show=terminal
#   2) Verify that your active GCP project in uppper left corner is correct
#   3) Verify that your identity in upper right corner is correct)
#   4) Paste the following to your cloud shell
#
#          bash -c 'source <(curl -s https://raw.githubusercontent.com/crowdstrike/cloud-gcp/main/falcon-container-terraform/run)'
#
#

# Workaround https://github.com/hashicorp/terraform-provider-google/issues/6782
    sudo sysctl -w net.ipv6.conf.all.disable_ipv6=1 net.ipv6.conf.default.disable_ipv6=1 net.ipv6.conf.lo.disable_ipv6=1 > /dev/null
    export APIS="googleapis.com www.googleapis.com storage.googleapis.com iam.googleapis.com container.googleapis.com cloudresourcemanager.googleapis.com"
    for name in $APIS
    do
      ipv4=$(getent ahostsv4 "$name" | head -n 1 | awk '{ print $1 }')
      grep -q "$name" /etc/hosts || ([ -n "$ipv4" ] && sudo sh -c "echo '$ipv4 $name' >> /etc/hosts")
    done
# Workaround end


set -e -o pipefail

if [ -z "$(gcloud config get-value project 2> /dev/null)" ]; then
    project_ids=$(gcloud projects list --format json | jq -r '.[].projectId')
    project_count=$(wc -w <<< "$project_ids")
    if [ "$project_count" == "1" ]; then
        gcloud config set project "$project_ids"
    else
        gcloud projects list
        echo "Multiple pre-existing GCP projects found. Please select project using the following command before re-trying"
        echo "  gcloud config set project VALUE"
        exit 1
   fi
fi
export TF_VAR_project_id=$(gcloud config get-value project 2> /dev/null)


[ -d ~/cloud-gcp ] || (cd "$HOME" && git clone --depth 1 https://github.com/crowdstrike/cloud-gcp)
[ -d ~/falcon-container-terraform ] || (ln -s $HOME/cloud-gcp/falcon-container-terraform $HOME/falcon-container-terraform)
cd ~/falcon-container-terraform
terraform init


terraform apply

cat <<__END__

               _ _
              (_) |             Your kubernetes cluster,
__      ____ _ _| |_            Your admin vm,
\ \ /\ / / _\` | | __|           Your Falcon Container Sensor,
 \ V  V / (_| | | |_            and Your vulnerable application,
  \_/\_/ \__,_|_|\__|           are all comming up.


__END__
sleep 10

ssh_key=$HOME/.ssh/container_lab_ssh_key
if ! [ -f "$ssh_key" ]; then
    ssh-keygen -t rsa -b 1024 -N '' -f "$ssh_key"
    gcloud compute config-ssh --ssh-key-file="$ssh_key"
fi
$(terraform output admin_access | tr -d '"')

echo "--------------------------------------------------"
echo "To destroy the demo environment please run"
echo "cd ~/falcon-container-terraform; terraform destroy"
